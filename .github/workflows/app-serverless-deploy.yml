name: Api server serverless Deploy

on:
  workflow_dispatch:
  push:
    branches: [master]
    paths: 'api/**'

env:
  DEV_HOST: ${{ secrets.DEV_HOST }}
  DEV_STAGE: ${{ secrets.DEV_STAGE }}
  DATABASE_URI: ${{ secrets.DATABASE_URI }}
  JWT_SECRET: ${{ secrets.JWT_SECRET }}
  JWT_EXPIRES_IN: ${{ secrets.JWT_EXPIRES_IN }}
  JWT_REFRESH_EXPIRES_IN: ${{ secrets.JWT_REFRESH_EXPIRES_IN }}
  AWS_REGION: ${{ secrets.AWS_REGION }}
  AWS_S3_IMAGE_MAIN_BUCKET: ${{ secrets.AWS_S3_IMAGE_MAIN_BUCKET }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  buildAndTest:
    name: buildAndTest
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./api/

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: api/package-lock.json

      - name: install dependency
        run: npm ci

      - name: build mono_lambda
        run: npm run build mono_lambda

      - name: Archive build file artifacts
        uses: actions/upload-artifact@v3
        with:
          name: bundled_dist
          path: ./api/dist

      - name: run test
        run: npm test

  serverless_deploy:
    name: serverless_deploy
    runs-on: ubuntu-latest
    environment: serverless-deploy
    defaults:
      run:
        working-directory: ./api/
    needs: buildAndTest

    steps:
      - uses: actions/checkout@v3

      - name: Create dist directory
        run: mkdir dist

      - name: Download a build file artifact
        uses: actions/download-artifact@v3
        with:
          name: bundled_dist
          path: ./api/dist

      - name: Display structure of downloaded files
        run: ls -R

      - name: serverless deploy
        uses: serverless/github-action@v3.1
        with:
          args: -c "serverless deploy"
          entrypoint: /bin/sh
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
